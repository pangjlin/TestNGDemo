<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="45" started-at="2016-04-07T09:47:56Z" finished-at="2016-04-07T09:47:56Z">
    <groups>
      <group name="G2">
        <method signature="TestNGDemo.testGroup2()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testGroup2" class="testNG.demo.TestNGDemo"/>
      </group> <!-- G2 -->
      <group name="G1">
        <method signature="TestNGDemo.testGroup1()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testGroup1" class="testNG.demo.TestNGDemo"/>
      </group> <!-- G1 -->
    </groups>
    <test name="test12" duration-ms="45" started-at="2016-04-07T09:47:56Z" finished-at="2016-04-07T09:47:56Z">
      <class name="testNG.demo.TestNGDemo">
        <test-method status="PASS" signature="setupEnv()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="setupEnv" duration-ms="10" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupEnv -->
        <test-method status="PASS" signature="testGroup1()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testGroup1" duration-ms="1" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroup1 -->
        <test-method status="PASS" signature="testException()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testException" duration-ms="0" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[NullPoint]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: NullPoint
	at testNG.demo.TestNGDemo.testException(TestNGDemo.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testException -->
        <test-method status="PASS" signature="testGroup2()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testGroup2" duration-ms="1" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroup2 -->
        <test-method status="PASS" signature="testNG()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testNG" duration-ms="1" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNG -->
        <test-method status="PASS" signature="testNG1()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testNG1" duration-ms="1" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNG1 -->
        <test-method status="PASS" signature="testNG2()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testNG2" duration-ms="0" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNG2 -->
        <test-method status="PASS" signature="testParam(java.lang.String, java.lang.String)[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testParam" duration-ms="1" started-at="2016-04-07T17:47:56Z" finished-at="2016-04-07T17:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[haha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lala]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParam -->
        <test-method status="PASS" signature="testMessage()[pri:0, instance:testNG.demo.TestNGDemo@e38e978]" name="testMessage" duration-ms="1" started-at="2016-04-07T17:47:56Z" depends-on-methods="testNG.demo.TestNGDemo.setupEnv" finished-at="2016-04-07T17:47:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
      </class> <!-- testNG.demo.TestNGDemo -->
    </test> <!-- test12 -->
  </suite> <!-- Suite1 -->
</testng-results>
